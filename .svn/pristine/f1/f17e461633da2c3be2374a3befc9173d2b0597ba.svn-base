<template>
  <div class="addList">
    <div class='addTable'>
      <div class='title'>
        {{title}}
        <span
          class="close"
          @click="cancel"
        >{{"×"}}</span>
      </div>
      <div class="formbox">
        <el-form
          ref="ruleForm"
          :model="form"
          label-width="140px"
        >
          <el-form-item label="输油处：">
               <el-select
                    size="small"
                    v-model="form.AREAID"
                    placeholder="请选择输油处"
                    @change='changePlace'
                    :disabled="flag == 0?true:false"
                    >
                    <el-option
                        v-for='item in placelist'
                        :key='item.GROUPCODE'
                        :label="item.GROUPNAME"
                        :value="item.GROUPCODE"
                    ></el-option>
                </el-select>
          </el-form-item>

          <el-form-item label="输油站：">
            <el-select
                size="small"
                v-model="form.STATIONID"
                placeholder="请选择输油站"
               :disabled="flag == 0?true:false"
               @change="changeStation"
                >
                <el-option
                    v-for='item in stationlist'
                    :key='item.GROUPCODE'
                    :label="item.GROUPNAME"
                    :value="item.GROUPCODE"
                ></el-option>
            </el-select>
          </el-form-item>
          <el-form-item label="所属管段：">
            <el-select
                size="small"
                v-model="form.PID"
                placeholder="请选择所属管段"
                :disabled="flag == 0?true:false"
                @change="changeRoute"
                >
                <el-option
                    v-for='item in routelist'
                    :key='item.SERIALID'
                    :label="item.NAME"
                    :value="item.SERIALID"
                ></el-option>
            </el-select>
          </el-form-item>
          <el-form-item label="第三方施工点数：" class="small">
                <el-select 
                      size="small"
                      v-model="dsfTypes"
                      placeholder="请选择第三方施工点数"
                      :disabled="flag == 0?true:false"
                      multiple  
                      collapse-tags
                      @change="getDsf"
                >
                  <!-- <el-checkbox :style="selfstyle" v-model="dsfCk" @change='selectAllDsf'>全选</el-checkbox> -->
                  <el-option v-for="dsf in dsfList" :label="dsf.MILEAGEID" :value="dsf.SERIALID+''" :key="dsf.SERIALID"></el-option>
                </el-select>
          </el-form-item>
          <el-form-item label="高风险段数：">
                 <el-select 
                      size="small"
                      v-model="gfxTypes"
                      placeholder="请选择高风险段数"
                      :disabled="flag == 0?true:false"
                      multiple  
                      collapse-tags
                      @change="getGfx"
                >
                  <!-- <el-checkbox :style="selfstyle" v-model="gfxCk" @change='selectAllGfx'>全选</el-checkbox> -->
                  <el-option v-for="gfx in gfxList" :label="gfx.NAME" :value="gfx.SERIALID+''" :key="gfx.SERIALID"></el-option>
                </el-select>
           </el-form-item>
           <el-form-item label="高后果区数：">
                <el-select 
                      size="small"
                      v-model="ghgTypes"
                      placeholder="请选择高后果区数"
                      :disabled="flag == 0?true:false"
                      multiple  
                      collapse-tags
                      @change="getGhg"
                >
                  <!-- <el-checkbox :style="selfstyle" v-model="ghgCk" @change='selectAllGhg'>全选</el-checkbox> -->
                  <el-option v-for="ghg in ghgList" :label="ghg.NAME" :value="ghg.SERIALID+''" :key="ghg.SERIALID"></el-option>
                </el-select>
           </el-form-item>
           <el-form-item label="段长：">
              <el-select
                size="small"
                v-model="form.USERID"
                placeholder="请选择段长"
                :disabled="flag == 0?true:false"
                @change="changePerson"
                >
                <el-option
                    v-for='item in personlist'
                    :key='item.PERSON_ID'
                    :label="item.PERSON_NAME"
                    :value="item.PERSON_ID"
                ></el-option>
            </el-select>
          </el-form-item>
          <el-form-item label="联系方式：">
            <el-input
              v-model="form.PHONE"
              size="small"
              placeholder="请输入联系方式"
               :disabled="flag == 0?true:false"
            ></el-input>
          </el-form-item>
          <el-form-item label="备注：">
            <el-input
              v-model="form.NOTE"
              type="textarea"
              :style="areaStyle"
              placeholder="请输入备注"
               :disabled="flag == 0?true:false"
            ></el-input>
          </el-form-item>
        </el-form>
      </div>

      <div class='confirm'>
        <span class="add" @click="submit('ruleForm')">确认</span>
        <span class="close" @click="cancel">取消</span>
      </div>
    </div>
  </div>

</template>

<script>
export default {
  name: 'detailGuanDao',
  props: ['title','flag','formobj'],
  data() {
    return {
      form: {
        "PIPENAME":"",
        "MODIFIEDBY":"",
        "TYPENAME":"",
        "AREAID":"",
        "GHG":"",
        "PHONE":"",
        "STATIONID":"",
        "PERSONNAME":"",
        "PID":"",
        "DSFNAME":"",
        "GFXNAME":"",
        "SERIALID":"",
        "TYPES":"",
        "ROUTENAME":"",
        "GHGNAME":"",
        "DSF":"",
        "NOTE":"",
        "LASTMODIFIED":"",
        "GFX":"",
        "USERID":"",
        "STATIONNAME":"",
        "AREANAME":"",
      },
      placelist:[],
      stationlist:[],
      routelist:[],
      dsfList:[],
      gfxList:[],
      ghgList:[],
      personlist:[],
      typeloading:false,
      selectloading: false,
      selfstyle: {
          textAlign: "right",
          width: "100%",
          paddingRight: "10px",
      },
      areaStyle:{
        background: "#252932",
        color:"#fff"
      },
      dsfCk:false,
      gfxCk:false,
      ghgCk:false,
      dsfTypes:[],
      gfxTypes:[],
      ghgTypes:[],
    };
  },
  async  mounted() {
     if(this.title=="修改段长信息"||this.title=="查看段长信息"){
        this.form=this.formobj;
        this.dsfTypes=this.form.DSF.split(",");
        console.log(typeof(this.dsfTypes));
        this.getDsf(this.dsfTypes);
        this.gfxTypes=this.form.GFX.split(",");
        this.getGfx(this.gfxTypes);
        this.ghgTypes=this.form.GHG.split(",");
        this.getGhg(this.ghgTypes);
     }
    this.getAllArea();//获取输油处
    this.changePlace(this.form.AREAID);//根据输油处获取输油站
    await this.changeStation(this.form.STATIONID);//根据输油站获取线路
    await this.changeRoute(this.form.PID);//根据管道id获取routedid了之后执行接下来的接口联调
  },
  methods: {
    //获取输油处
   getAllArea(){
      return this.$myHttp.get('gpsGroups/getAllArea?userId=' + sessionStorage.getItem('userId')).then((res) => {
          this.placelist = res.result;
      });
   },
    //根据输油处获取输油站
   changePlace(val){
        return this.$myHttp.get('gpsGroups/getStationsByArea?userId=' +sessionStorage.getItem('userId') +'&groupCode=' +val).then((res) => {
          this.stationlist = res.result;
        });
   },
   //根据输油站获取所属管段和人员
   async changeStation(val){
      await this.$myHttp.get('pipeMana/getPipeList?stationId=' + val).then((res) => {
           this.routelist=res.result;
       });
      await this.$myHttp.get('pipeMana/getPersonList?stationId=' + val).then((res) => {
           this.personlist=res.result;
      });
      return null
   },
   //根据人员赋值电话号码
   changePerson(val){
      this.personlist.map((item)=>{
        if(item.PERSON_ID==val){
          this.form.PHONE=item.TELEPHONE;
        }
      })
   },
   //通过线路id获取dsf,gfx,ghg
   changeRoute(val){
     let routeId="";
     console.log(this.routelist);//这里获取不到
     this.routelist.map((item)=>{
         if(item.SERIALID==val){
           routeId=item.ROUTEID;
         }
     })
     //根据线路Id获取第三方施工点列表
       this.$myHttp.get('pipeMana/getDsfList?routeId='+routeId).then((res) => {
           this.dsfList=res.result;
       });
       //根据线路Id获取高风险段列表
       this.$myHttp.get('pipeMana/getGfxList?routeId='+routeId).then((res) => {
           this.gfxList=res.result;
       });
       //根据线路Id获取高后果区列表
       this.$myHttp.get('pipeMana/getGhgList?routeId='+routeId).then((res) => {
           this.ghgList=res.result;
       });
   },
   cancel(){
        this.$emit('close');
   },
   submit() {
      if(this.title=="新增段长信息"){
          this.form.SERIALID=parseInt(Math.random()*100+1);
      }
      let obj={
            "gpsPipeMana": {
                "dsf":this.dsfTypes.toString(),
                "gfx":this.gfxTypes.toString(),
                "ghg":this.ghgTypes.toString(),
                "note":this.form.NOTE,
                "pId":this.form.PID,
                "phone":this.form.PHONE,
                "serialid":this.form.SERIALID,
                "userId":this.form.USERID
            },
            userId: sessionStorage.getItem('userId'),
      }
      console.log(obj);
       this.$emit('sub',obj);
   },
   getDsf(dsfs) {
      //  if (dsfs.length === this.dsfList.length) {
      //    this.dsfCk = true
      //  } else {
      //    this.dsfCk = false
      //  }
       this.dsfTypes=dsfs;
    },
    // selectAllDsf() {
    //   this.dsfTypes=[];
    //   if (this.dsfCk) {
    //     this.dsfList.map((item) => {
    //       this.dsfTypes.push(item.SERIALID);
    //     })
    //   } else {
    //       this.dsfTypes=[];
    //   }
    //   console.log(this.dsfCk);
    //   console.log(this.dsfTypes);
    // },
    getGfx(gfxs) {
      //  if (gfxs.length === this.gfxList.length) {
      //    this.gfxCk = true
      //  } else {
      //    this.gfxCk = false
      //  }
       this.gfxTypes=gfxs;
    },
    // selectAllGfx() {
    //   this.gfxTypes=[];
    //   if (this.gfxCk) {
    //     this.gfxList.map((item) => {
    //       this.gfxTypes.push(item.SERIALID);
    //     })
    //   } else {
    //       this.gfxTypes=[];
    //   }
    // },
    getGhg(ghgs) {
      //  if (ghgs.length === this.ghgList.length) {
      //    this.ghgCk = true
      //  } else {
      //    this.ghgCk = false
      //  }
       this.ghgTypes=ghgs;
    },
    // selectAllGhg() {
    //   this.ghgTypes=[];
    //   if (this.ghgCk) {
    //     this.ghgList.map((item) => {
    //       this.ghgTypes.push(item.SERIALID);
    //     })
    //   } else {
    //       this.ghgTypes=[];
    //   }
    // },
  },
};
</script>

<style lang="less" scoped>
.addList {
  position: absolute;
  z-index: 2;
  left:0;top:0;
  height: 100%;
  width: 100%;
  background: rgba(0, 0, 0, 0.8);
  .addTable {
    width: 80%;
    margin-left: 10%;
    height: 38rem;
    background: #000000;
    .title {
      position: relative;
      height: 60px;
      line-height: 60px;
      text-align: center;
      background: #252932;
      border-bottom: 1px solid #ccc;
      color: #3baaaf;font-size:16px;
      .close {
        position: absolute;
        height: 30px;
        line-height: 30px;
        width: 30px;
        right: 15px;
        top: 15px;
        font-size: 25px;
        cursor: pointer;
      }
    }
    .tr {
      height: 45px;
      padding: 5px;
      .lable {
        float: left;
        height: 30px;
        line-height: 30px;
        padding: 0px 15px;
      }
      .el-select {
        float: left;
        height: 30px;
        line-height: 30px;
        margin-right: 30px;
      }
      .el-select input.el-input__inner {
        height: 30px !important;
        line-height: 30px !important;
        background: #1c1e2c;
      }
      .el-input__inner {
        background: #1c1e2c;
        height: 30px;
        line-height: 30px;
      }
    }
    table {
      display: inline-block;
      width: 100%;
      height: calc(~'(100% - 150px)');
      overflow-y: auto;
      border-collapse: collapse;
      thead {
        display: inline-block;
        width: 100%;
        tr {
          display: inline-block;
          width: 100%;
          margin: 0;
          padding: 0;
          th {
            float: left;
            padding: 0;
            margin: 0;
            height: 2rem;
            line-height: 2rem;
            border: 1px solid #1e727e;
            font-size: 18px;
          }
        }
      }
      tbody {
        display: inline-block;
        width: 100%;
        tr {
          display: inline-block;
          width: 100%;
          td {
            float: left;
            padding: 0;
            margin: 0;
            height: 1.6rem;
            line-height: 1.6rem;
            border: 1px solid #1e727e;
            text-align: center;
            overflow: hidden; /*超出部分隐藏*/
            white-space: nowrap; /*不换行*/
            text-overflow: ellipsis; /*超出部分文字以...显示*/
          }
        }
      }
    }
    .confirm {
      position: relative;
      height: 60px;
      line-height: 60px;
      text-align: center;
      background: #252932;
      color: #3baaaf;
      display: flex;
      justify-content: center;
      align-items: center;
      .close {
        display: inline-block;
        height: 30px;
        line-height: 30px;
        width: 60px;
        font-size: 16px;
        cursor: pointer;
        color: #3baaaf;
        border: 1px solid #3baaaf;
        border-radius: 5px;
        margin-left: 20px;
      }
      .add {
        display: inline-block;
        height: 30px;
        line-height: 30px;
        width: 60px;
        font-size: 16px;
        cursor: pointer;
        color: #3baaaf;
        border: 1px solid #3baaaf;
        border-radius: 5px;
      }
    }
  }
}
.formbox {
  overflow: hidden;
  padding: 20px;
  box-sizing: border-box;
  .el-form-item {
    float: left;
    width: 43%;
    .el-select {
      width: 100%;
    }
    .addBtn {
      display: inline-block;
      text-align: center;
      width: 30px;
      height: 30px;
      line-height: 30px;
      background: #777;
      color: #fff;
      font-size: 20px;
      margin-left: 20px;
      cursor: pointer;
    }

    .level1 {
      // padding-left: 30px;
      min-height: 30px;
      span {
        display: inline-block;
        height: 30px;
        line-height: 30px;
        padding: 0 15px;
        border-radius: 15px;
        border: 1px solid #ccc;
        min-width: 50px;
        margin-right: 20px;
        margin-bottom: 20px;
        cursor: pointer;
      }
    }
  }
  .w100 {
    width: 100%;
  }
}
</style>